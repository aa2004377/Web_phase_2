generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = "file:./dev.db"
}

model Student {
  id       String  @id
  username String  @unique
  password String

  completedCourses CompletedCourse[]
  pendingCourses   PendingCourse[]
  registeredCourses RegisteredStudent[]
}

model Instructor {
  id       String  @id
  username String  @unique
  password String

  courses InstructorCourse[]
  pendingApprovals PendingCourse[]
}

model Admin {
  id       String  @id
  username String  @unique
  password String
}

model Course {
  course_id          Int     @id
  course_name        String
  course_description String?
  category          String
  status            String 

  prerequisites    Prerequisite[] @relation("prerequisites")
  requiredBy       Prerequisite[] @relation("requiredBy")
  instructorCourses InstructorCourse[]
  completedCourses  CompletedCourse[]
  pendingCourses    PendingCourse[]
}

model InstructorCourse {
  capacity       Int
  status         String 
  
  course_id      Int
  course         Course   @relation(fields: [course_id], references: [course_id])
  
  instructor_id  String
  instructor    Instructor @relation(fields: [instructor_id], references: [id])
  
  registeredStudents RegisteredStudent[]

  @@id([course_id, instructor_id])
}

model RegisteredStudent {
  instructor_course_course_id Int
  instructor_course_instructor_id String
  instructorCourse InstructorCourse @relation(fields: [instructor_course_course_id, instructor_course_instructor_id], references: [course_id, instructor_id])
  
  student_id String
  student    Student @relation(fields: [student_id], references: [id])

  @@id([instructor_course_course_id, instructor_course_instructor_id, student_id])
}

model CompletedCourse {
  course_id Int
  course    Course @relation(fields: [course_id], references: [course_id])
  student_id String
  student   Student @relation(fields: [student_id], references: [id])
  grade     String

  @@id([course_id, student_id])
}

model PendingCourse {
  course_id Int
  course    Course @relation(fields: [course_id], references: [course_id])
  student_id String
  student   Student @relation(fields: [student_id], references: [id])
  instructor_id String
  instructor Instructor @relation(fields: [instructor_id], references: [id])
  approved  Boolean

  @@id([course_id, student_id, instructor_id])
}

model Prerequisite {
  course_id          Int
  course             Course @relation(fields: [course_id], references: [course_id], name: "requiredBy")
  prerequisite_id    Int
  prerequisiteCourse Course @relation(fields: [prerequisite_id], references: [course_id], name: "prerequisites")

  @@id([course_id, prerequisite_id])
}